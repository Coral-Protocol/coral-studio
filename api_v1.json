{
	"openapi": "3.1.0",
	"info": {
		"title": "Coral Server API",
		"version": "1.0"
	},
	"externalDocs": {
		"url": "/"
	},
	"servers": [],
	"tags": [],
	"paths": {
		"/api/v1/debug/thread/{applicationId}/{privacyKey}/{coralSessionId}/{debugAgentId}": {
			"post": {
				"tags": ["debug"],
				"summary": "Create thread",
				"description": "Creates a new thread",
				"operationId": "debugCreateThread",
				"parameters": [
					{
						"name": "applicationId",
						"in": "path",
						"description": "The application ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					},
					{
						"name": "privacyKey",
						"in": "path",
						"description": "The privacy key",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					},
					{
						"name": "coralSessionId",
						"in": "path",
						"description": "The Coral session ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					},
					{
						"name": "debugAgentId",
						"in": "path",
						"description": "The debug agent ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					}
				],
				"requestBody": {
					"description": "Thread creation request",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateThreadInput"
							}
						}
					},
					"required": false
				},
				"responses": {
					"200": {
						"description": "Thread created successfully",
						"headers": {}
					},
					"404": {
						"description": "Session not found",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					},
					"500": {
						"description": "Error creating thread",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/debug/thread/sendMessage/{applicationId}/{privacyKey}/{coralSessionId}/{debugAgentId}": {
			"post": {
				"tags": ["debug"],
				"summary": "Send message",
				"description": "Sends a message in debug mode",
				"operationId": "debugSendMessage",
				"parameters": [
					{
						"name": "applicationId",
						"in": "path",
						"description": "The application ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					},
					{
						"name": "privacyKey",
						"in": "path",
						"description": "The privacy key",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					},
					{
						"name": "coralSessionId",
						"in": "path",
						"description": "The Coral session ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					},
					{
						"name": "debugAgentId",
						"in": "path",
						"description": "The debug agent ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					}
				],
				"requestBody": {
					"description": "The message to send",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SendMessageInput"
							}
						}
					},
					"required": false
				},
				"responses": {
					"200": {
						"description": "Message sent successfully",
						"headers": {}
					},
					"404": {
						"description": "Session not found",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					},
					"500": {
						"description": "Error sending message",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/sessions": {
			"get": {
				"tags": ["sessions"],
				"summary": "Get sessions",
				"description": "Fetches all active session IDs",
				"operationId": "getSessions",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "string",
										"title": "String"
									},
									"title": "ArrayList<String>"
								}
							}
						}
					}
				},
				"deprecated": false
			},
			"post": {
				"tags": ["sessions"],
				"summary": "Create session",
				"description": "Creates a new session",
				"operationId": "createSession",
				"parameters": [],
				"requestBody": {
					"description": "Session creation request",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateSessionRequest"
							}
						}
					},
					"required": false
				},
				"responses": {
					"200": {
						"description": "Success",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateSessionResponse"
								}
							}
						}
					},
					"403": {
						"description": "Invalid application ID or privacy key",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					},
					"400": {
						"description": "The agent graph is invalid and could not be processed",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/message/{applicationId}/{privacyKey}/{coralSessionId}": {
			"post": {
				"tags": ["message"],
				"summary": "Send message",
				"description": "Sends a message",
				"operationId": "sendMessage",
				"parameters": [
					{
						"name": "applicationId",
						"in": "path",
						"description": "The application ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					},
					{
						"name": "privacyKey",
						"in": "path",
						"description": "The privacy key",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					},
					{
						"name": "coralSessionId",
						"in": "path",
						"description": "The Coral session ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {}
					},
					"403": {
						"description": "Invalid application ID or privacy key",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					},
					"404": {
						"description": "Invalid Coral session ID",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					},
					"400": {
						"description": "Invalid session ID",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					},
					"500": {
						"description": "MCP error",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/message/devmode/{applicationId}/{privacyKey}/{coralSessionId}": {
			"post": {
				"tags": ["message"],
				"summary": "Send development message",
				"description": "Sends a dev-mode message",
				"operationId": "sendDevMessage",
				"parameters": [
					{
						"name": "applicationId",
						"in": "path",
						"description": "The application ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					},
					{
						"name": "privacyKey",
						"in": "path",
						"description": "The privacy key",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					},
					{
						"name": "coralSessionId",
						"in": "path",
						"description": "The Coral session ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {}
					},
					"404": {
						"description": "Invalid Coral session ID",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					},
					"400": {
						"description": "Invalid session ID",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					},
					"500": {
						"description": "MCP error",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/telemetry/{sessionId}/{threadId}/{messageId}": {
			"get": {
				"tags": ["telemetry"],
				"summary": "Get telemetry",
				"description": "Fetches telemetry information for a given message",
				"operationId": "getTelemetry",
				"parameters": [
					{
						"name": "sessionId",
						"in": "path",
						"description": "The session ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					},
					{
						"name": "threadId",
						"in": "path",
						"description": "The thread ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					},
					{
						"name": "messageId",
						"in": "path",
						"description": "The message ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Telemetry"
								}
							}
						}
					},
					"404": {
						"description": "Telemetry data not found for specified message",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/telemetry/{sessionId}": {
			"post": {
				"tags": ["telemetry"],
				"summary": "Add telemetry",
				"description": "Attaches telemetry information a list of messages",
				"operationId": "addTelemetry",
				"parameters": [
					{
						"name": "sessionId",
						"in": "path",
						"description": "The session ID",
						"required": true,
						"deprecated": false,
						"explode": false,
						"schema": {
							"type": "string",
							"title": "String"
						}
					}
				],
				"requestBody": {
					"description": "Telemetry data",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TelemetryPost"
							}
						}
					},
					"required": false
				},
				"responses": {
					"200": {
						"description": "Success",
						"headers": {}
					},
					"404": {
						"description": "Specified messages were not found",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteException"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/agents": {
			"get": {
				"tags": ["agents"],
				"summary": "Get available agents",
				"description": "Fetches a list of all agents available to the Coral server",
				"operationId": "getAvailableAgents",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PublicRegistryAgent"
									},
									"title": "ArrayList<PublicRegistryAgent>"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/agents/exported": {
			"get": {
				"tags": ["agents"],
				"summary": "Gets exported agents",
				"description": "Fetches agents the Coral server has exported to other servers",
				"operationId": "getExportedAgents",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/AgentExport"
									},
									"title": "ArrayList<AgentExport>"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/agents/claim": {
			"post": {
				"tags": ["agents"],
				"summary": "Claim agents",
				"description": "Creates a claim for agents that can later be instantiated via WebSocket",
				"operationId": "claimAgents",
				"parameters": [],
				"requestBody": {
					"description": "A list of agents to claim",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GraphAgentRequest"
							}
						}
					},
					"required": false
				},
				"responses": {
					"200": {
						"description": "Success",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"title": "String"
								}
							}
						}
					},
					"404": {
						"description": "Agent doesn't exist or is not exported",
						"headers": {}
					},
					"400": {
						"description": "Request contains invalid agents",
						"headers": {}
					}
				},
				"deprecated": false
			}
		}
	},
	"components": {
		"schemas": {
			"SocketEvent": {
				"anyOf": [
					{
						"type": "object",
						"properties": {
							"type": {
								"type": "string",
								"enum": ["agent_list"],
								"title": "String"
							},
							"agents": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Agent"
								},
								"title": "ArrayList<Agent>"
							}
						},
						"required": ["agents", "type"],
						"title": "agent_list"
					},
					{
						"type": "object",
						"properties": {
							"type": {
								"type": "string",
								"enum": ["debug_agent_registered"],
								"title": "String"
							},
							"id": {
								"type": "string",
								"title": "String"
							}
						},
						"required": ["id", "type"],
						"title": "debug_agent_registered"
					},
					{
						"type": "object",
						"properties": {
							"type": {
								"type": "string",
								"enum": ["session"],
								"title": "String"
							},
							"event": {
								"anyOf": [
									{
										"type": "object",
										"properties": {
											"type": {
												"type": "string",
												"enum": ["agent_ready"],
												"title": "String"
											},
											"agent": {
												"type": "string",
												"title": "String"
											}
										},
										"required": ["agent", "type"],
										"title": "agent_ready"
									},
									{
										"type": "object",
										"properties": {
											"type": {
												"type": "string",
												"enum": ["agent_registered"],
												"title": "String"
											},
											"agent": {
												"$ref": "#/components/schemas/Agent"
											}
										},
										"required": ["agent", "type"],
										"title": "agent_registered"
									},
									{
										"type": "object",
										"properties": {
											"type": {
												"type": "string",
												"enum": ["agent_state_updated"],
												"title": "String"
											},
											"agentId": {
												"type": "string",
												"title": "String"
											},
											"state": {
												"$ref": "#/components/schemas/AgentState"
											}
										},
										"required": ["agentId", "state", "type"],
										"title": "agent_state_updated"
									},
									{
										"type": "object",
										"properties": {
											"type": {
												"type": "string",
												"enum": ["message_sent"],
												"title": "String"
											},
											"threadId": {
												"type": "string",
												"title": "String"
											},
											"message": {
												"$ref": "#/components/schemas/ResolvedMessage"
											}
										},
										"required": ["message", "threadId", "type"],
										"title": "message_sent"
									},
									{
										"type": "object",
										"properties": {
											"type": {
												"type": "string",
												"enum": ["thread_created"],
												"title": "String"
											},
											"id": {
												"type": "string",
												"title": "String"
											},
											"name": {
												"type": "string",
												"title": "String"
											},
											"creatorId": {
												"type": "string",
												"title": "String"
											},
											"participants": {
												"type": "array",
												"items": {
													"type": "string",
													"title": "String"
												},
												"title": "ArrayList<String>"
											},
											"summary": {
												"type": "string",
												"title": "String"
											}
										},
										"required": ["creatorId", "id", "name", "participants", "type"],
										"title": "thread_created"
									}
								],
								"discriminator": {
									"propertyName": "type"
								},
								"title": "SessionEvent"
							}
						},
						"required": ["event", "type"],
						"title": "session"
					},
					{
						"type": "object",
						"properties": {
							"type": {
								"type": "string",
								"enum": ["thread_list"],
								"title": "String"
							},
							"threads": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ResolvedThread"
								},
								"title": "ArrayList<ResolvedThread>"
							}
						},
						"required": ["threads", "type"],
						"title": "thread_list"
					}
				],
				"discriminator": {
					"propertyName": "type"
				},
				"title": "SocketEvent"
			},
			"Agent": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"title": "String"
					},
					"description": {
						"type": "string",
						"title": "String"
					},
					"state": {
						"$ref": "#/components/schemas/AgentState"
					},
					"mcpUrl": {
						"type": "string",
						"title": "String"
					},
					"extraTools": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CustomTool"
						},
						"title": "LinkedHashSet<CustomTool>",
						"uniqueItems": true
					}
				},
				"required": ["description", "extraTools", "id", "state"],
				"title": "Agent"
			},
			"AgentState": {
				"type": "string",
				"enum": ["disconnected", "connecting", "listening", "busy", "dead"],
				"title": "AgentState"
			},
			"CustomTool": {
				"type": "object",
				"properties": {
					"transport": {
						"anyOf": [
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"enum": ["http"],
										"title": "String"
									},
									"url": {
										"type": "string",
										"title": "UriString"
									}
								},
								"required": ["type", "url"],
								"title": "http"
							}
						],
						"discriminator": {
							"propertyName": "type"
						},
						"title": "ToolTransport"
					},
					"toolSchema": {
						"$ref": "#/components/schemas/Tool"
					}
				},
				"required": ["toolSchema", "transport"],
				"title": "CustomTool"
			},
			"Tool": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"title": "String"
					},
					"description": {
						"type": "string",
						"title": "String"
					},
					"inputSchema": {
						"$ref": "#/components/schemas/Input"
					}
				},
				"required": ["inputSchema", "name"],
				"title": "Tool"
			},
			"Input": {
				"type": "object",
				"properties": {
					"properties": {
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/JsonElement"
						},
						"title": "JsonObject<String,JsonElement>"
					},
					"required": {
						"type": "array",
						"items": {
							"type": "string",
							"title": "String"
						},
						"title": "ArrayList<String>"
					},
					"type": {
						"type": "string",
						"title": "String"
					}
				},
				"required": ["properties", "type"],
				"title": "Input"
			},
			"JsonElement": {
				"type": "object",
				"properties": {},
				"title": "JsonElement"
			},
			"ResolvedMessage": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"title": "String"
					},
					"threadName": {
						"type": "string",
						"title": "String"
					},
					"threadId": {
						"type": "string",
						"title": "String"
					},
					"senderId": {
						"type": "string",
						"title": "String"
					},
					"content": {
						"type": "string",
						"title": "String"
					},
					"timestamp": {
						"type": "integer",
						"format": "int64",
						"title": "Long"
					},
					"mentions": {
						"type": "array",
						"items": {
							"type": "string",
							"title": "String"
						},
						"title": "ArrayList<String>"
					}
				},
				"required": [
					"content",
					"id",
					"mentions",
					"senderId",
					"threadId",
					"threadName",
					"timestamp"
				],
				"title": "ResolvedMessage"
			},
			"ResolvedThread": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"title": "String"
					},
					"name": {
						"type": "string",
						"title": "String"
					},
					"creatorId": {
						"type": "string",
						"title": "String"
					},
					"participants": {
						"type": "array",
						"items": {
							"type": "string",
							"title": "String"
						},
						"title": "ArrayList<String>"
					},
					"messages": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ResolvedMessage"
						},
						"title": "ArrayList<ResolvedMessage>"
					},
					"isClosed": {
						"type": "boolean",
						"title": "Boolean"
					},
					"summary": {
						"type": "string",
						"title": "String"
					}
				},
				"required": ["creatorId", "id", "isClosed", "messages", "name", "participants"],
				"title": "ResolvedThread"
			},
			"McpTooling": {
				"type": "string",
				"enum": [
					"coral_add_participant",
					"coral_close_thread",
					"coral_create_thread",
					"coral_list_agents",
					"coral_remove_participant",
					"coral_send_message",
					"coral_wait_for_mentions"
				],
				"title": "McpTooling"
			},
			"McpResources": {
				"type": "string",
				"enum": ["Message.resource", "Instruction.resource", "Agent.resource"],
				"title": "McpResources"
			},
			"CreateThreadInput": {
				"type": "object",
				"properties": {
					"threadName": {
						"type": "string",
						"title": "String"
					},
					"participantIds": {
						"type": "array",
						"items": {
							"type": "string",
							"title": "String"
						},
						"title": "ArrayList<String>"
					}
				},
				"required": ["participantIds", "threadName"],
				"title": "CreateThreadInput"
			},
			"RouteException": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"title": "String"
					},
					"stackTrace": {
						"type": "array",
						"items": {
							"type": "string",
							"title": "String"
						},
						"title": "ArrayList<String>"
					}
				},
				"required": ["stackTrace"],
				"title": "RouteException"
			},
			"SendMessageInput": {
				"type": "object",
				"properties": {
					"threadId": {
						"type": "string",
						"title": "String"
					},
					"content": {
						"type": "string",
						"title": "String"
					},
					"mentions": {
						"type": "array",
						"items": {
							"type": "string",
							"title": "String"
						},
						"title": "ArrayList<String>"
					}
				},
				"required": ["content", "mentions", "threadId"],
				"title": "SendMessageInput"
			},
			"AgentGraphRequest": {
				"type": "object",
				"properties": {
					"agents": {
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/GraphAgentRequest"
						},
						"title": "HashMap<String,GraphAgentRequest>"
					},
					"links": {
						"type": "array",
						"items": {
							"type": "array",
							"items": {
								"type": "string",
								"title": "String"
							},
							"title": "LinkedHashSet<String>",
							"uniqueItems": true
						},
						"title": "LinkedHashSet<LinkedHashSet<String>>",
						"uniqueItems": true
					},
					"tools": {
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/CustomTool"
						},
						"title": "LinkedHashMap<String,CustomTool>"
					}
				},
				"required": ["agents", "links", "tools"],
				"title": "AgentGraphRequest"
			},
			"GraphAgentRequest": {
				"type": "object",
				"description": "A request for an agent",
				"properties": {
					"registryAgentName": {
						"type": "string",
						"description": "The name of the agent in the registry.  This is case sensitive and must match exactly",
						"title": "String"
					},
					"agentName": {
						"type": "string",
						"description": "The name that this agent will have in the session graph",
						"title": "String"
					},
					"options": {
						"type": "object",
						"additionalProperties": {
							"anyOf": [
								{
									"type": "object",
									"properties": {
										"type": {
											"type": "string",
											"enum": ["number"],
											"title": "String"
										},
										"value": {
											"type": "number",
											"format": "double",
											"title": "Double"
										}
									},
									"required": ["type", "value"],
									"title": "number"
								},
								{
									"type": "object",
									"properties": {
										"type": {
											"type": "string",
											"enum": ["string"],
											"title": "String"
										},
										"value": {
											"type": "string",
											"title": "String"
										}
									},
									"required": ["type", "value"],
									"title": "string"
								}
							],
							"discriminator": {
								"propertyName": "type"
							},
							"title": "AgentOptionValue"
						},
						"description": "The arguments to pass to the agent",
						"title": "LinkedHashMap<String,AgentOptionValue>"
					},
					"systemPrompt": {
						"type": "string",
						"description": "The system prompt/developer text/preamble passed to the agent",
						"title": "String"
					},
					"blocking": {
						"type": "boolean",
						"description": "<todo description>",
						"title": "Boolean"
					},
					"tools": {
						"type": "array",
						"description": "<todo description>",
						"items": {
							"type": "string",
							"title": "String"
						},
						"title": "LinkedHashSet<String>",
						"uniqueItems": true
					},
					"provider": {
						"anyOf": [
							{
								"type": "object",
								"description": "The agent will be provided by this server",
								"properties": {
									"type": {
										"type": "string",
										"enum": ["local"],
										"title": "String"
									},
									"runtime": {
										"$ref": "#/components/schemas/RuntimeId"
									}
								},
								"required": ["runtime", "type"],
								"title": "local"
							},
							{
								"type": "object",
								"description": "Agent will be provided by another Coral server",
								"properties": {
									"type": {
										"type": "string",
										"enum": ["remote"],
										"title": "String"
									},
									"runtime": {
										"$ref": "#/components/schemas/RuntimeId",
										"description": "The runtime that should be used for this remote agent.  Servers can export only specific runtimes so the runtime choice may narrow servers that can adequately provide the agent"
									},
									"serverSource": {
										"anyOf": [
											{
												"type": "object",
												"properties": {
													"type": {
														"type": "string",
														"enum": [
															"org.coralprotocol.coralserver.agent.graph.GraphAgentServerSource.Indexer"
														],
														"title": "String"
													},
													"indexer": {
														"type": "string",
														"title": "String"
													}
												},
												"required": ["indexer", "type"],
												"title": "Indexer"
											},
											{
												"type": "object",
												"properties": {
													"type": {
														"type": "string",
														"enum": ["servers"],
														"title": "String"
													},
													"servers": {
														"type": "array",
														"items": {
															"$ref": "#/components/schemas/GraphAgentServer"
														},
														"title": "ArrayList<GraphAgentServer>"
													}
												},
												"required": ["servers", "type"],
												"title": "servers"
											}
										],
										"description": "A description of which servers should be queried for this remote agent request",
										"discriminator": {
											"propertyName": "type"
										},
										"title": "GraphAgentServerSource"
									},
									"serverScoring": {
										"anyOf": [
											{
												"type": "object",
												"description": "Custom server scoring.  Weights can be added on a flat or multiplier basis per attribute",
												"properties": {
													"type": {
														"type": "string",
														"enum": ["custom"],
														"title": "String"
													},
													"scorers": {
														"type": "array",
														"items": {
															"anyOf": [
																{
																	"type": "object",
																	"description": "The effect will be applied for every attribute of the specified type with a boolean false value",
																	"properties": {
																		"op": {
																			"type": "string",
																			"enum": ["is_false"],
																			"title": "String"
																		},
																		"type": {
																			"$ref": "#/components/schemas/GraphAgentServerAttributeType"
																		},
																		"effect": {
																			"$ref": "#/components/schemas/flat",
																			"description": "A flat negative or positive weight"
																		}
																	},
																	"required": ["effect", "op", "type"],
																	"title": "is_false"
																},
																{
																	"type": "object",
																	"description": "The effect will be applied if the no attribute of the specified type is present",
																	"properties": {
																		"op": {
																			"type": "string",
																			"enum": ["is_not_present"],
																			"title": "String"
																		},
																		"type": {
																			"$ref": "#/components/schemas/GraphAgentServerAttributeType"
																		},
																		"effect": {
																			"$ref": "#/components/schemas/flat",
																			"description": "A flat negative or positive weight"
																		}
																	},
																	"required": ["effect", "op", "type"],
																	"title": "is_not_present"
																},
																{
																	"type": "object",
																	"description": "The effect will be applied for every attribute of the specified type",
																	"properties": {
																		"op": {
																			"type": "string",
																			"enum": ["is_present"],
																			"title": "String"
																		},
																		"type": {
																			"$ref": "#/components/schemas/GraphAgentServerAttributeType"
																		},
																		"effect": {
																			"$ref": "#/components/schemas/GraphAgentServerScorerEffect"
																		}
																	},
																	"required": ["effect", "op", "type"],
																	"title": "is_present"
																},
																{
																	"type": "object",
																	"description": "The effect will be applied for every attribute of the specified type with a boolean true value",
																	"properties": {
																		"op": {
																			"type": "string",
																			"enum": ["is_true"],
																			"title": "String"
																		},
																		"type": {
																			"$ref": "#/components/schemas/GraphAgentServerAttributeType"
																		},
																		"effect": {
																			"$ref": "#/components/schemas/flat",
																			"description": "A flat negative or positive weight"
																		}
																	},
																	"required": ["effect", "op", "type"],
																	"title": "is_true"
																},
																{
																	"type": "object",
																	"description": "The effect will be applied for every attribute of the specified type with a matching string value",
																	"properties": {
																		"op": {
																			"type": "string",
																			"enum": ["string_equal"],
																			"title": "String"
																		},
																		"type": {
																			"$ref": "#/components/schemas/GraphAgentServerAttributeType"
																		},
																		"string": {
																			"type": "string",
																			"title": "String"
																		},
																		"effect": {
																			"$ref": "#/components/schemas/flat",
																			"description": "A flat negative or positive weight"
																		}
																	},
																	"required": ["effect", "op", "string", "type"],
																	"title": "string_equal"
																},
																{
																	"type": "object",
																	"description": "The effect will be applied for every attribute of the specified type with a non-matching string value",
																	"properties": {
																		"op": {
																			"type": "string",
																			"enum": ["string_not_equal"],
																			"title": "String"
																		},
																		"type": {
																			"$ref": "#/components/schemas/GraphAgentServerAttributeType"
																		},
																		"string": {
																			"type": "string",
																			"title": "String"
																		},
																		"effect": {
																			"$ref": "#/components/schemas/flat",
																			"description": "A flat negative or positive weight"
																		}
																	},
																	"required": ["effect", "op", "string", "type"],
																	"title": "string_not_equal"
																}
															],
															"discriminator": {
																"propertyName": "op"
															},
															"title": "GraphAgentServerCustomScorer"
														},
														"title": "ArrayList<GraphAgentServerCustomScorer>"
													}
												},
												"required": ["scorers", "type"],
												"title": "custom"
											},
											{
												"type": "object",
												"description": "Default server scoring.  No weights assigned to any server attribute",
												"properties": {
													"type": {
														"type": "string",
														"enum": ["default"],
														"title": "String"
													}
												},
												"required": ["type"],
												"title": "default"
											}
										],
										"description": "Customisation for the scoring of servers",
										"discriminator": {
											"propertyName": "type"
										},
										"title": "GraphAgentServerScoring"
									}
								},
								"required": ["runtime", "serverSource", "type"],
								"title": "remote"
							}
						],
						"description": "The server that should provide this agent and the runtime to use",
						"discriminator": {
							"propertyName": "type"
						},
						"title": "GraphAgentProvider"
					}
				},
				"required": ["agentName", "options", "provider", "registryAgentName", "tools"],
				"title": "GraphAgentRequest"
			},
			"RuntimeId": {
				"type": "string",
				"enum": ["executable", "docker", "FUNCTION"],
				"title": "RuntimeId"
			},
			"GraphAgentServer": {
				"type": "object",
				"properties": {
					"address": {
						"type": "string",
						"title": "String"
					},
					"port": {
						"type": "integer",
						"maximum": 65535,
						"minimum": 0,
						"title": "UShort"
					},
					"attributes": {
						"type": "array",
						"items": {
							"anyOf": [
								{
									"type": "object",
									"properties": {
										"format": {
											"type": "string",
											"enum": ["boolean"],
											"title": "String"
										},
										"type": {
											"$ref": "#/components/schemas/GraphAgentServerAttributeType"
										},
										"value": {
											"type": "boolean",
											"title": "Boolean"
										}
									},
									"required": ["format", "type", "value"],
									"title": "boolean"
								},
								{
									"type": "object",
									"properties": {
										"format": {
											"type": "string",
											"enum": ["number"],
											"title": "String"
										},
										"type": {
											"$ref": "#/components/schemas/GraphAgentServerAttributeType"
										},
										"value": {
											"type": "number",
											"format": "double",
											"title": "Double"
										}
									},
									"required": ["format", "type", "value"],
									"title": "number"
								},
								{
									"type": "object",
									"properties": {
										"format": {
											"type": "string",
											"enum": ["string"],
											"title": "String"
										},
										"type": {
											"$ref": "#/components/schemas/GraphAgentServerAttributeType"
										},
										"value": {
											"type": "string",
											"title": "String"
										}
									},
									"required": ["format", "type", "value"],
									"title": "string"
								}
							],
							"discriminator": {
								"propertyName": "format"
							},
							"title": "GraphAgentServerAttribute"
						},
						"title": "ArrayList<GraphAgentServerAttribute>"
					}
				},
				"required": ["address", "attributes", "port"],
				"title": "GraphAgentServer"
			},
			"GraphAgentServerAttributeType": {
				"type": "string",
				"enum": ["geographic_location", "attested_by"],
				"title": "GraphAgentServerAttributeType"
			},
			"flat": {
				"type": "object",
				"description": "A flat negative or positive weight",
				"properties": {
					"weight": {
						"type": "number",
						"format": "double",
						"title": "Double"
					}
				},
				"required": ["weight"],
				"title": "flat"
			},
			"GraphAgentServerScorerEffect": {
				"anyOf": [
					{
						"type": "object",
						"description": "A flat negative or positive weight",
						"properties": {
							"weight": {
								"type": "number",
								"format": "double",
								"title": "Double"
							}
						},
						"required": ["weight"],
						"title": "flat"
					},
					{
						"type": "object",
						"description": "A multiplier weight, this effect will only multiply against attributes with a number type",
						"properties": {
							"weight": {
								"type": "number",
								"format": "double",
								"title": "Double"
							}
						},
						"required": ["weight"],
						"title": "multiplier"
					}
				],
				"title": "GraphAgentServerScorerEffect"
			},
			"CreateSessionRequest": {
				"type": "object",
				"properties": {
					"applicationId": {
						"type": "string",
						"title": "String"
					},
					"sessionId": {
						"type": "string",
						"title": "String"
					},
					"privacyKey": {
						"type": "string",
						"title": "String"
					},
					"agentGraph": {
						"$ref": "#/components/schemas/AgentGraphRequest"
					}
				},
				"required": ["applicationId", "privacyKey"],
				"title": "CreateSessionRequest"
			},
			"CreateSessionResponse": {
				"type": "object",
				"properties": {
					"sessionId": {
						"type": "string",
						"title": "String"
					},
					"applicationId": {
						"type": "string",
						"title": "String"
					},
					"privacyKey": {
						"type": "string",
						"title": "String"
					}
				},
				"required": ["applicationId", "privacyKey", "sessionId"],
				"title": "CreateSessionResponse"
			},
			"Document": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"title": "String"
					},
					"text": {
						"type": "string",
						"title": "String"
					}
				},
				"required": ["id", "text"],
				"title": "Document"
			},
			"ToolFunction": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"title": "String"
					},
					"arguments": {
						"type": "string",
						"title": "String"
					}
				},
				"required": ["arguments", "name"],
				"title": "ToolFunction"
			},
			"ContentFormat": {
				"type": "string",
				"enum": ["base64", "string"],
				"title": "ContentFormat"
			},
			"AudioMediaType": {
				"type": "string",
				"enum": ["wav", "mp3", "aiff", "aac", "ogg", "flac"],
				"title": "AudioMediaType"
			},
			"DocumentMediaType": {
				"type": "string",
				"enum": [
					"pdf",
					"txt",
					"rtf",
					"html",
					"css",
					"markdown",
					"csv",
					"xml",
					"javascript",
					"python"
				],
				"title": "DocumentMediaType"
			},
			"ImageMediaType": {
				"type": "string",
				"enum": ["jpeg", "png", "gif", "webp", "heic", "heif", "svg"],
				"title": "ImageMediaType"
			},
			"ImageDetail": {
				"type": "string",
				"enum": ["low", "high", "auto"],
				"title": "ImageDetail"
			},
			"VideoMediaType": {
				"type": "string",
				"enum": ["avi", "mp4", "mpeg"],
				"title": "VideoMediaType"
			},
			"AudioAssistant": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"title": "String"
					}
				},
				"required": ["id"],
				"title": "AudioAssistant"
			},
			"ToolCall": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"title": "String"
					},
					"type": {
						"$ref": "#/components/schemas/ToolType"
					},
					"function": {
						"$ref": "#/components/schemas/Function"
					}
				},
				"required": ["function", "id", "type"],
				"title": "ToolCall"
			},
			"ToolType": {
				"type": "string",
				"enum": ["function"],
				"title": "ToolType"
			},
			"Function": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"title": "String"
					},
					"arguments": {
						"type": "string",
						"title": "String"
					}
				},
				"required": ["arguments", "name"],
				"title": "Function"
			},
			"OpenAISystemContent": {
				"type": "object",
				"properties": {
					"type": {
						"$ref": "#/components/schemas/SystemContentType"
					},
					"text": {
						"type": "string",
						"title": "String"
					}
				},
				"required": ["text", "type"],
				"title": "OpenAISystemContent"
			},
			"SystemContentType": {
				"type": "string",
				"enum": ["text"],
				"title": "SystemContentType"
			},
			"OpenAIToolResultContent": {
				"type": "object",
				"properties": {
					"type": {
						"$ref": "#/components/schemas/ToolResultContentType"
					},
					"text": {
						"type": "string",
						"title": "String"
					}
				},
				"required": ["text", "type"],
				"title": "OpenAIToolResultContent"
			},
			"ToolResultContentType": {
				"type": "string",
				"enum": ["text"],
				"title": "ToolResultContentType"
			},
			"InputAudio": {
				"type": "object",
				"properties": {
					"data": {
						"type": "string",
						"title": "String"
					},
					"format": {
						"$ref": "#/components/schemas/AudioMediaType"
					}
				},
				"required": ["data", "format"],
				"title": "InputAudio"
			},
			"ImageUrl": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string",
						"title": "String"
					},
					"detail": {
						"$ref": "#/components/schemas/ImageDetail"
					}
				},
				"required": ["detail", "url"],
				"title": "ImageUrl"
			},
			"Telemetry": {
				"type": "object",
				"properties": {
					"modelDescription": {
						"type": "string",
						"title": "String"
					},
					"preamble": {
						"type": "string",
						"title": "String"
					},
					"resources": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Document"
						},
						"title": "ArrayList<Document>"
					},
					"tools": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Document"
						},
						"title": "ArrayList<Document>"
					},
					"temperature": {
						"type": "number",
						"format": "double",
						"title": "Double"
					},
					"maxTokens": {
						"type": "integer",
						"format": "int64",
						"title": "Long"
					},
					"additionalParams": {
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/JsonElement"
						},
						"title": "JsonObject<String,JsonElement>"
					},
					"messages": {
						"anyOf": [
							{
								"type": "object",
								"properties": {
									"format": {
										"type": "string",
										"enum": ["Generic"],
										"title": "String"
									},
									"data": {
										"type": "array",
										"items": {
											"anyOf": [
												{
													"type": "object",
													"properties": {
														"role": {
															"type": "string",
															"enum": ["assistant"],
															"title": "String"
														},
														"id": {
															"type": "string",
															"title": "String"
														},
														"content": {
															"type": "array",
															"items": {
																"anyOf": [
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["assistant_reasoning"],
																				"title": "String"
																			},
																			"reasoning": {
																				"type": "array",
																				"items": {
																					"type": "string",
																					"title": "String"
																				},
																				"title": "ArrayList<String>"
																			}
																		},
																		"required": ["reasoning", "type"],
																		"title": "assistant_reasoning"
																	},
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["assistant_text"],
																				"title": "String"
																			},
																			"text": {
																				"type": "string",
																				"title": "String"
																			}
																		},
																		"required": ["text", "type"],
																		"title": "assistant_text"
																	},
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["assistant_tool_call"],
																				"title": "String"
																			},
																			"id": {
																				"type": "string",
																				"title": "String"
																			},
																			"callId": {
																				"type": "string",
																				"title": "String"
																			},
																			"function": {
																				"$ref": "#/components/schemas/ToolFunction"
																			}
																		},
																		"required": ["function", "id", "type"],
																		"title": "assistant_tool_call"
																	}
																],
																"discriminator": {
																	"propertyName": "type"
																},
																"title": "GenericAssistantContent"
															},
															"title": "ArrayList<GenericAssistantContent>"
														}
													},
													"required": ["content", "role"],
													"title": "assistant"
												},
												{
													"type": "object",
													"properties": {
														"role": {
															"type": "string",
															"enum": ["user"],
															"title": "String"
														},
														"content": {
															"type": "array",
															"items": {
																"anyOf": [
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["audio"],
																				"title": "String"
																			},
																			"data": {
																				"type": "string",
																				"title": "String"
																			},
																			"format": {
																				"$ref": "#/components/schemas/ContentFormat"
																			},
																			"mediaType": {
																				"$ref": "#/components/schemas/AudioMediaType"
																			}
																		},
																		"required": ["data", "type"],
																		"title": "audio"
																	},
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["document"],
																				"title": "String"
																			},
																			"data": {
																				"type": "string",
																				"title": "String"
																			},
																			"format": {
																				"$ref": "#/components/schemas/ContentFormat"
																			},
																			"mediaType": {
																				"$ref": "#/components/schemas/DocumentMediaType"
																			}
																		},
																		"required": ["data", "type"],
																		"title": "document"
																	},
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["image"],
																				"title": "String"
																			},
																			"data": {
																				"type": "string",
																				"title": "String"
																			},
																			"format": {
																				"$ref": "#/components/schemas/ContentFormat"
																			},
																			"mediaType": {
																				"$ref": "#/components/schemas/ImageMediaType"
																			},
																			"detail": {
																				"$ref": "#/components/schemas/ImageDetail"
																			}
																		},
																		"required": ["data", "type"],
																		"title": "image"
																	},
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["text"],
																				"title": "String"
																			},
																			"text": {
																				"type": "string",
																				"title": "String"
																			}
																		},
																		"required": ["text", "type"],
																		"title": "text"
																	},
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["tool_result"],
																				"title": "String"
																			},
																			"id": {
																				"type": "string",
																				"title": "String"
																			},
																			"callId": {
																				"type": "string",
																				"title": "String"
																			},
																			"content": {
																				"type": "array",
																				"items": {
																					"anyOf": [
																						{
																							"type": "object",
																							"properties": {
																								"type": {
																									"type": "string",
																									"enum": ["tool_image"],
																									"title": "String"
																								},
																								"data": {
																									"type": "string",
																									"title": "String"
																								},
																								"format": {
																									"$ref": "#/components/schemas/ContentFormat"
																								},
																								"mediaType": {
																									"$ref": "#/components/schemas/ImageMediaType"
																								},
																								"detail": {
																									"$ref": "#/components/schemas/ImageDetail"
																								}
																							},
																							"required": ["data", "type"],
																							"title": "tool_image"
																						},
																						{
																							"type": "object",
																							"properties": {
																								"type": {
																									"type": "string",
																									"enum": ["tool_text"],
																									"title": "String"
																								},
																								"text": {
																									"type": "string",
																									"title": "String"
																								}
																							},
																							"required": ["text", "type"],
																							"title": "tool_text"
																						}
																					],
																					"discriminator": {
																						"propertyName": "type"
																					},
																					"title": "GenericToolResultContent"
																				},
																				"title": "ArrayList<GenericToolResultContent>"
																			}
																		},
																		"required": ["content", "id", "type"],
																		"title": "tool_result"
																	},
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["video"],
																				"title": "String"
																			},
																			"data": {
																				"type": "string",
																				"title": "String"
																			},
																			"format": {
																				"$ref": "#/components/schemas/ContentFormat"
																			},
																			"mediaType": {
																				"$ref": "#/components/schemas/VideoMediaType"
																			}
																		},
																		"required": ["data", "type"],
																		"title": "video"
																	}
																],
																"discriminator": {
																	"propertyName": "type"
																},
																"title": "GenericUserContent"
															},
															"title": "ArrayList<GenericUserContent>"
														}
													},
													"required": ["content", "role"],
													"title": "user"
												}
											],
											"discriminator": {
												"propertyName": "role"
											},
											"title": "GenericMessage"
										},
										"title": "ArrayList<GenericMessage>"
									}
								},
								"required": ["data", "format"],
								"title": "Generic"
							},
							{
								"type": "object",
								"properties": {
									"format": {
										"type": "string",
										"enum": ["OpenAI"],
										"title": "String"
									},
									"data": {
										"type": "array",
										"items": {
											"anyOf": [
												{
													"type": "object",
													"properties": {
														"role": {
															"type": "string",
															"enum": ["assistant"],
															"title": "String"
														},
														"content": {
															"type": "array",
															"items": {
																"anyOf": [
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["refusal"],
																				"title": "String"
																			},
																			"refusal": {
																				"type": "string",
																				"title": "String"
																			}
																		},
																		"required": ["refusal", "type"],
																		"title": "refusal"
																	},
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["text"],
																				"title": "String"
																			},
																			"text": {
																				"type": "string",
																				"title": "String"
																			}
																		},
																		"required": ["text", "type"],
																		"title": "text"
																	}
																],
																"discriminator": {
																	"propertyName": "type"
																},
																"title": "OpenAIAssistantContent"
															},
															"title": "ArrayList<OpenAIAssistantContent>"
														},
														"refusal": {
															"type": "string",
															"title": "String"
														},
														"audio": {
															"$ref": "#/components/schemas/AudioAssistant"
														},
														"name": {
															"type": "string",
															"title": "String"
														},
														"toolCalls": {
															"type": "array",
															"items": {
																"$ref": "#/components/schemas/ToolCall"
															},
															"title": "ArrayList<ToolCall>"
														}
													},
													"required": ["content", "role", "toolCalls"],
													"title": "assistant"
												},
												{
													"type": "object",
													"properties": {
														"role": {
															"type": "string",
															"enum": ["developer"],
															"title": "String"
														},
														"content": {
															"type": "array",
															"items": {
																"$ref": "#/components/schemas/OpenAISystemContent"
															},
															"title": "ArrayList<OpenAISystemContent>"
														},
														"name": {
															"type": "string",
															"title": "String"
														}
													},
													"required": ["content", "role"],
													"title": "developer"
												},
												{
													"type": "object",
													"properties": {
														"role": {
															"type": "string",
															"enum": ["tool"],
															"title": "String"
														},
														"toolCallId": {
															"type": "string",
															"title": "String"
														},
														"content": {
															"type": "array",
															"items": {
																"$ref": "#/components/schemas/OpenAIToolResultContent"
															},
															"title": "ArrayList<OpenAIToolResultContent>"
														}
													},
													"required": ["content", "role", "toolCallId"],
													"title": "tool"
												},
												{
													"type": "object",
													"properties": {
														"role": {
															"type": "string",
															"enum": ["user"],
															"title": "String"
														},
														"content": {
															"type": "array",
															"items": {
																"anyOf": [
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["audio"],
																				"title": "String"
																			},
																			"inputAudio": {
																				"$ref": "#/components/schemas/InputAudio"
																			}
																		},
																		"required": ["inputAudio", "type"],
																		"title": "audio"
																	},
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["image_url"],
																				"title": "String"
																			},
																			"imageUrl": {
																				"$ref": "#/components/schemas/ImageUrl"
																			}
																		},
																		"required": ["imageUrl", "type"],
																		"title": "image_url"
																	},
																	{
																		"type": "object",
																		"properties": {
																			"type": {
																				"type": "string",
																				"enum": ["text"],
																				"title": "String"
																			},
																			"text": {
																				"type": "string",
																				"title": "String"
																			}
																		},
																		"required": ["text", "type"],
																		"title": "text"
																	}
																],
																"discriminator": {
																	"propertyName": "type"
																},
																"title": "OpenAIUserContent"
															},
															"title": "ArrayList<OpenAIUserContent>"
														},
														"name": {
															"type": "string",
															"title": "String"
														}
													},
													"required": ["content", "role"],
													"title": "user"
												}
											],
											"discriminator": {
												"propertyName": "role"
											},
											"title": "OpenAIMessage"
										},
										"title": "ArrayList<OpenAIMessage>"
									}
								},
								"required": ["data", "format"],
								"title": "OpenAI"
							}
						],
						"discriminator": {
							"propertyName": "format"
						},
						"title": "TelemetryMessages"
					}
				},
				"required": ["messages", "modelDescription", "resources", "tools"],
				"title": "Telemetry"
			},
			"TelemetryTarget": {
				"type": "object",
				"properties": {
					"threadId": {
						"type": "string",
						"title": "String"
					},
					"messageId": {
						"type": "string",
						"title": "String"
					}
				},
				"required": ["messageId", "threadId"],
				"title": "TelemetryTarget"
			},
			"TelemetryPost": {
				"type": "object",
				"properties": {
					"targets": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/TelemetryTarget"
						},
						"title": "ArrayList<TelemetryTarget>"
					},
					"data": {
						"$ref": "#/components/schemas/Telemetry"
					}
				},
				"required": ["data", "targets"],
				"title": "TelemetryPost"
			},
			"PublicRegistryAgent": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"title": "String"
					},
					"runtimes": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RuntimeId"
						},
						"title": "ArrayList<RuntimeId>"
					},
					"options": {
						"type": "object",
						"additionalProperties": {
							"anyOf": [
								{
									"type": "object",
									"properties": {
										"type": {
											"type": "string",
											"enum": ["number"],
											"title": "String"
										},
										"description": {
											"type": "string",
											"title": "String"
										},
										"default": {
											"type": "number",
											"format": "double",
											"title": "Double"
										},
										"required": {
											"type": "boolean",
											"title": "Boolean"
										}
									},
									"required": ["required", "type"],
									"title": "number"
								},
								{
									"type": "object",
									"properties": {
										"type": {
											"type": "string",
											"enum": ["secret"],
											"title": "String"
										},
										"description": {
											"type": "string",
											"title": "String"
										},
										"required": {
											"type": "boolean",
											"title": "Boolean"
										}
									},
									"required": ["required", "type"],
									"title": "secret"
								},
								{
									"type": "object",
									"properties": {
										"type": {
											"type": "string",
											"enum": ["string"],
											"title": "String"
										},
										"description": {
											"type": "string",
											"title": "String"
										},
										"default": {
											"type": "string",
											"title": "String"
										},
										"required": {
											"type": "boolean",
											"title": "Boolean"
										}
									},
									"required": ["required", "type"],
									"title": "string"
								}
							],
							"discriminator": {
								"propertyName": "type"
							},
							"title": "AgentOption"
						},
						"title": "LinkedHashMap<String,AgentOption>"
					}
				},
				"required": ["id", "options", "runtimes"],
				"title": "PublicRegistryAgent"
			},
			"AgentExport": {
				"type": "object",
				"properties": {
					"agent": {
						"$ref": "#/components/schemas/RegistryAgent"
					},
					"runtimes": {
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/AgentExportPricing"
						},
						"title": "LinkedHashMap<RuntimeId,AgentExportPricing>"
					},
					"quantity": {
						"type": "integer",
						"maximum": 4294967295,
						"minimum": 0,
						"title": "UInt"
					}
				},
				"required": ["agent", "quantity", "runtimes"],
				"title": "AgentExport"
			},
			"RegistryAgent": {
				"type": "object",
				"properties": {
					"runtimes": {
						"$ref": "#/components/schemas/runtime"
					},
					"options": {
						"type": "object",
						"additionalProperties": {
							"anyOf": [
								{
									"type": "object",
									"properties": {
										"type": {
											"type": "string",
											"enum": ["number"],
											"title": "String"
										},
										"description": {
											"type": "string",
											"title": "String"
										},
										"default": {
											"type": "number",
											"format": "double",
											"title": "Double"
										},
										"required": {
											"type": "boolean",
											"title": "Boolean"
										}
									},
									"required": ["required", "type"],
									"title": "number"
								},
								{
									"type": "object",
									"properties": {
										"type": {
											"type": "string",
											"enum": ["secret"],
											"title": "String"
										},
										"description": {
											"type": "string",
											"title": "String"
										},
										"required": {
											"type": "boolean",
											"title": "Boolean"
										}
									},
									"required": ["required", "type"],
									"title": "secret"
								},
								{
									"type": "object",
									"properties": {
										"type": {
											"type": "string",
											"enum": ["string"],
											"title": "String"
										},
										"description": {
											"type": "string",
											"title": "String"
										},
										"default": {
											"type": "string",
											"title": "String"
										},
										"required": {
											"type": "boolean",
											"title": "Boolean"
										}
									},
									"required": ["required", "type"],
									"title": "string"
								}
							],
							"discriminator": {
								"propertyName": "type"
							},
							"title": "AgentOption"
						},
						"title": "LinkedHashMap<String,AgentOption>"
					}
				},
				"required": ["options", "runtimes"],
				"title": "RegistryAgent"
			},
			"runtime": {
				"type": "object",
				"properties": {
					"executable": {
						"$ref": "#/components/schemas/executable"
					},
					"docker": {
						"$ref": "#/components/schemas/docker"
					}
				},
				"title": "runtime"
			},
			"executable": {
				"type": "object",
				"properties": {
					"command": {
						"type": "array",
						"items": {
							"type": "string",
							"title": "String"
						},
						"title": "ArrayList<String>"
					},
					"environment": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/EnvVar"
						},
						"title": "ArrayList<EnvVar>"
					}
				},
				"required": ["command", "environment"],
				"title": "executable"
			},
			"EnvVar": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"title": "String"
					},
					"value": {
						"type": "string",
						"title": "String"
					},
					"from": {
						"type": "string",
						"title": "String"
					},
					"option": {
						"type": "string",
						"title": "String"
					}
				},
				"title": "EnvVar"
			},
			"docker": {
				"type": "object",
				"properties": {
					"image": {
						"type": "string",
						"title": "String"
					},
					"environment": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/EnvVar"
						},
						"title": "ArrayList<EnvVar>"
					}
				},
				"required": ["environment", "image"],
				"title": "docker"
			},
			"AgentExportPricing": {
				"type": "object",
				"properties": {
					"min_price": {
						"type": "number",
						"format": "double",
						"title": "Double"
					},
					"max_price": {
						"type": "number",
						"format": "double",
						"title": "Double"
					}
				},
				"required": ["max_price", "min_price"],
				"title": "AgentExportPricing"
			}
		},
		"examples": {}
	},
	"webhooks": {}
}
